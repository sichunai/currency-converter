{"ast":null,"code":"import _slicedToArray from \"/Users/sichunai/dwight/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sichunai/dwight/frontend/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nvar App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      clicked = _useState2[0],\n      setClicked = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      exchangeRates = _useState4[0],\n      setExchangeData = _useState4[1];\n\n  var _useState5 = useState(\"USD\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputCurrency = _useState6[0],\n      setInputCurrency = _useState6[1];\n\n  var _useState7 = useState(\"USD\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      outputCurrency = _useState8[0],\n      setOutputCurrency = _useState8[1];\n\n  useEffect(function () {\n    var ignore = false;\n    fetch(\"https://v6.exchangerate-api.com/v6/YOUR-API-KEY/pair/\".concat(inputCurrency, \"/\").concat(outputCurrency)).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (!ignore) {\n        setExchangeData(Object.keys(data.conversion_rates));\n      }\n    });\n    return function () {\n      ignore = true;\n    };\n  }, [inputCurrency, outputCurrency]);\n\n  var handleClick = function handleClick() {\n    setClicked(!clicked);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Dwight Funding Assesment\"), React.createElement(\"div\", {\n    className: \"input-currency\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Choose current currency\", React.createElement(\"select\", {\n    onChange: function onChange(e) {\n      return setInputCurrency(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Select\"), exchangeRates ? exchangeRates.map(function (cur) {\n    return React.createElement(\"option\", {\n      value: cur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" \", cur);\n  }) : \"\")), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Input value\", React.createElement(\"input\", {\n    value: inputCurrency,\n    onChange: function onChange(e) {\n      return setInputCurrency(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"output-currency\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Choose desired currency\", React.createElement(\"select\", {\n    onChange: function onChange(e) {\n      return setOutputCurrency(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Select\"), exchangeRates ? exchangeRates.map(function (cur) {\n    return React.createElement(\"option\", {\n      value: cur,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" \", cur);\n  }) : \"\")), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Output value\", React.createElement(\"input\", {\n    value: outputCurrency,\n    onChange: function onChange(e) {\n      return setOutputCurrency(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }))), React.createElement(\"button\", {\n    onClick: function onClick() {\n      return handleClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Click Me\"), clicked ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Lets get some data!\") : \"\");\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sichunai/dwight/frontend/src/App.js"],"names":["React","useEffect","useState","App","clicked","setClicked","exchangeRates","setExchangeData","inputCurrency","setInputCurrency","outputCurrency","setOutputCurrency","ignore","fetch","then","response","json","data","Object","keys","conversion_rates","handleClick","e","target","value","map","cur"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [clicked, setClicked] = useState(false);\n  const [exchangeRates, setExchangeData] = useState(null);\n  const [inputCurrency, setInputCurrency] = useState(\"USD\");\n  const [outputCurrency, setOutputCurrency] = useState(\"USD\");\n\n  useEffect(\n    () => {\n      let ignore = false;\n      fetch(\n        `https://v6.exchangerate-api.com/v6/YOUR-API-KEY/pair/${inputCurrency}/${outputCurrency}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          if (!ignore) {\n            setExchangeData(Object.keys(data.conversion_rates));\n          }\n        });\n      return () => {\n        ignore = true;\n      };\n    },\n    [inputCurrency, outputCurrency]\n  );\n\n  const handleClick = () => {\n    setClicked(!clicked);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dwight Funding Assesment</h1>\n      <div className=\"input-currency\">\n        <label>\n          Choose current currency\n          <select onChange={(e) => setInputCurrency(e.target.value)}>\n            <option value=\"select\">Select</option>\n            {exchangeRates\n              ? exchangeRates.map((cur) => <option value={cur}> {cur}</option>)\n              : \"\"}\n          </select>\n        </label>\n        <label>\n          Input value\n          <input\n            value={inputCurrency}\n            onChange={(e) => setInputCurrency(e.target.value)}\n          />\n        </label>\n      </div>\n      <div className=\"output-currency\">\n        <label>\n          Choose desired currency\n          <select onChange={(e) => setOutputCurrency(e.target.value)}>\n            <option value=\"select\">Select</option>\n            {exchangeRates\n              ? exchangeRates.map((cur) => <option value={cur}> {cur}</option>)\n              : \"\"}\n          </select>\n        </label>\n        <label>\n          Output value\n          <input\n            value={outputCurrency}\n            onChange={(e) => setOutputCurrency(e.target.value)}\n          />\n        </label>\n      </div>\n      <button onClick={() => handleClick()}>Click Me</button>\n      {clicked ? <h1>Lets get some data!</h1> : \"\"}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}